---
import type { SockbaseApplicationDocument, SockbaseApplicationHashIdDocument, SockbaseEventDocument, SockbaseSpaceDocument } from "sockbase";
import listLib from "../../libs/list";
import eventLib from "../../libs/event";
import Root from "../../layouts/Root.astro";
import applicationLib from "../../libs/application";

type ListProps = {
  event: SockbaseEventDocument;
  spaces: SockbaseSpaceDocument[];
  appHashes: SockbaseApplicationHashIdDocument[];
  apps: SockbaseApplicationDocument[];
}

export const getStaticPaths = async () => {
  const controls = await listLib.getListControlsAsync();

  const eventIds = controls.map((control) => control.eventId);

  const props = await Promise.all(eventIds.map(async id => ({
    id,
    event: await eventLib.getEventByIdAsync(id),
    spaces: await eventLib.getSpacesByEventIdAsync(id),
    appHashes: await applicationLib.getApplicationHashIdByEventIdAsync(id),
    apps: await applicationLib.getApplicationsByEventIdAsync(id)
  })))
    .then(fetchedEvents => {
      return fetchedEvents
        .reduce(
          (p, c) => ({
            ...p,
            [c.id]: {
              event: c.event,
              spaces: c.spaces,
              appHashes: c.appHashes,
              apps: c.apps
          }}),
          {} as Record<string, ListProps>)
    });

  return controls.map((control) => ({
    params: { slug: control.eventId },
    props: props[control.eventId]
  }));
}

const props = Astro.props as ListProps

console.log(props.appHashes, props.apps);
---

<Root>
  <h1>{props.event.name} サークルリスト</h1>
  <table>
    <thead>
      <tr>
        <th>スペース</th>
        <th>サークル</th>
        <th>ペンネーム</th>
      </tr>
    </thead>
    <tbody>
      {props.spaces.map((space) => {
        const hashDoc = props.appHashes.find(appHash => appHash.spaceId === space.id);
        const appDoc = props.apps.find(app => app.id === hashDoc?.applicationId);

        return (
        <tr>
          <td>{space.spaceName}</td>
          <td>{appDoc?.circle.name}</td>
          <td>{appDoc?.circle.penName}</td>
        </tr>
        )
      })}
    </tbody>
  </table>
</Root>
